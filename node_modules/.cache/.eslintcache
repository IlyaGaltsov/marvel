[{"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\index.js":"1","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\services\\MarvelService.js":"2","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\app\\App.js":"3","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\randomChar\\RandomChar.js":"4","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\appHeader\\AppHeader.js":"5","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charList\\CharList.js":"6","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charInfo\\CharInfo.js":"7","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\spinner\\spinner.js":"8","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\errorMessage\\ErrorMessage.js":"9","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\skeleton\\Skeleton.js":"10"},{"size":242,"mtime":1685781145178,"results":"11","hashOfConfig":"12"},{"size":1295,"mtime":1686334645818,"results":"13","hashOfConfig":"12"},{"size":966,"mtime":1686773401705,"results":"14","hashOfConfig":"12"},{"size":3090,"mtime":1686773771769,"results":"15","hashOfConfig":"12"},{"size":559,"mtime":1629625707000,"results":"16","hashOfConfig":"12"},{"size":4846,"mtime":1686754790476,"results":"17","hashOfConfig":"12"},{"size":3209,"mtime":1686774456015,"results":"18","hashOfConfig":"12"},{"size":4615,"mtime":1685794854204,"results":"19","hashOfConfig":"12"},{"size":143,"mtime":1685795893704,"results":"20","hashOfConfig":"12"},{"size":666,"mtime":1629627051000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"108toe1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\index.js",[],["46","47"],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\services\\MarvelService.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\app\\App.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\randomChar\\RandomChar.js",["48"],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\appHeader\\AppHeader.js",["49","50","51"],"import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charList\\CharList.js",["52"],"import {useState, useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) =>{\n    const [charList,setCharList]=useState([]);\n    const [loading,setLoading]=useState(true);\n    const [error,setError]=useState(false);\n    const [newItemLoading,setNewItemLoading]=useState(false);\n    const [offset,setOffset]=useState(210);\n    const [charEnded,setCharEnded]=useState(false);\n    \n    const marvelService = new MarvelService();\n\n    useEffect(()=>{\n        onRequest();\n    },[]);\n\n    const onRequest = (offset) => {\n        onCharListLoading();\n        marvelService.getAllCharacters(offset)\n            .then(onCharListLoaded)\n            .catch(onError)\n    }\n\n    const onCharListLoading = () => {\n        setNewItemLoading(true);\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList=>[...charList, ...newCharList]);\n        setLoading(loading=>false);\n        setNewItemLoading(newItemLoading=>false);\n        setOffset(offset=>offset+9);\n        setCharEnded(charEnded=>ended);\n    }\n\n    const onError = () => {\n        setError(true);\n        setLoading(false);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) =>{\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i]=el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? items : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charInfo\\CharInfo.js",["53"],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\spinner\\spinner.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\errorMessage\\ErrorMessage.js",["54"],"import img from './error (1).gif'\r\n\r\nconst ErrorMessage =()=>{\r\n    return(\r\n        <img src={img}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\skeleton\\Skeleton.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":41,"column":7,"nodeType":"61","endLine":41,"endColumn":9,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":7,"column":17,"nodeType":"65","endLine":7,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":13,"column":25,"nodeType":"65","endLine":13,"endColumn":37},{"ruleId":"63","severity":1,"message":"64","line":15,"column":25,"nodeType":"65","endLine":15,"endColumn":37},{"ruleId":"59","severity":1,"message":"66","line":21,"column":7,"nodeType":"61","endLine":21,"endColumn":9,"suggestions":"67"},{"ruleId":"59","severity":1,"message":"60","line":20,"column":7,"nodeType":"61","endLine":20,"endColumn":21,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":9,"nodeType":"65","endLine":5,"endColumn":25},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.","ArrayExpression",["73"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'onRequest'. Either include it or remove the dependency array.",["74"],["75"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [updateChar]",{"range":"82","text":"83"},"Update the dependencies array to be: [onRequest]",{"range":"84","text":"85"},"Update the dependencies array to be: [props.charId, updateChar]",{"range":"86","text":"87"},[1032,1034],"[updateChar]",[697,699],"[onRequest]",[570,584],"[props.charId, updateChar]"]