[{"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\index.js":"1","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\services\\MarvelService.js":"2","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\app\\App.js":"3","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\randomChar\\RandomChar.js":"4","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\appHeader\\AppHeader.js":"5","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charList\\CharList.js":"6","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charInfo\\CharInfo.js":"7","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\spinner\\spinner.js":"8","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\errorMessage\\ErrorMessage.js":"9","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\skeleton\\Skeleton.js":"10","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\hooks\\http.hooks.js":"11","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\comicsList\\ComicsList.js":"12"},{"size":242,"mtime":1685781145178,"results":"13","hashOfConfig":"14"},{"size":2177,"mtime":1686904402778,"results":"15","hashOfConfig":"14"},{"size":1069,"mtime":1686837975449,"results":"16","hashOfConfig":"14"},{"size":2715,"mtime":1686836468118,"results":"17","hashOfConfig":"14"},{"size":559,"mtime":1629625707000,"results":"18","hashOfConfig":"14"},{"size":3747,"mtime":1686909005445,"results":"19","hashOfConfig":"14"},{"size":2918,"mtime":1686832702880,"results":"20","hashOfConfig":"14"},{"size":4615,"mtime":1685794854204,"results":"21","hashOfConfig":"14"},{"size":143,"mtime":1685795893704,"results":"22","hashOfConfig":"14"},{"size":666,"mtime":1629627051000,"results":"23","hashOfConfig":"14"},{"size":930,"mtime":1686836051966,"results":"24","hashOfConfig":"14"},{"size":2458,"mtime":1686909111716,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"108toe1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\index.js",[],["56","57"],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\services\\MarvelService.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\app\\App.js",["58","59","60","61","62","63"],"import {useState} from \"react\";\nimport PropTypes from 'prop-types'\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ComicsList from \"../comicsList/ComicsList\"\n\nimport decoration from '../../resources/img/vision.png';\n\nconst App = () => {\n    const [selectedChar,setSelectedChar]=useState(null);\n    const onCharSelected=(id)=>{\n            setSelectedChar(id)\n    }\n    return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n                {/*<RandomChar/>\n                <div className=\"char__content\">\n                    <CharList onCharSelected={onCharSelected}/>\n                    <CharInfo charId={selectedChar}/>\n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                */}\n                <ComicsList/>\n            </main>\n        </div>\n    )\n}\nApp.propTypes={\n    onCharSelected: PropTypes.number\n}\nexport default App;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\randomChar\\RandomChar.js",["64"],"import { useState, useEffect } from 'react';\n\nimport './randomChar.scss';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport useMarverService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\n\nconst RandomChar = () =>{\n    const [char,setChar]=useState([]);\n\n    const {loading,error,getCharacter,clearError}=useMarverService();\n\n    const updateChar=()=>{\n        clearError();\n        const id =Math.floor(Math.random()*(1011400-1011000)+1011000)\n        getCharacter(id)\n        .then(onCharLoaded)\n    };\n\n    const onCharLoaded=(char)=>{\n        setChar(char);\n    }\n    useEffect(()=>{\n        updateChar()\n    },[])\n\n    const errorMassage = error ? <ErrorMessage/>:null;\n    const spinner = loading ? <Spinner/>:null;\n    const content =!(loading || error) ? <View char={char}/>:null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMassage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\nconst View = ({char}) =>{\n    const{name, description, thumbnail, homepage, wiki}=char\n    let imgStyle = {'objectFit' : 'cover'};\n\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return( \n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default RandomChar;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\appHeader\\AppHeader.js",["65","66","67"],"import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charList\\CharList.js",["68"],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charInfo\\CharInfo.js",["69"],"import { useState,useEffect } from 'react';\nimport PropTypes from 'prop-types'\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n    const [char,setChar]=useState(null);\n    const {loading,error,getCharacter,clearError}=useMarvelService();\n\n    useEffect(()=>{\n        updateChar();\n    },[props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        };\n        clearError()\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\nCharInfo.propTypes={\n    charId: PropTypes.number\n}\nexport default CharInfo;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\spinner\\spinner.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\errorMessage\\ErrorMessage.js",["70"],"import img from './error (1).gif'\r\n\r\nconst ErrorMessage =()=>{\r\n    return(\r\n        <img src={img}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\skeleton\\Skeleton.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\hooks\\http.hooks.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\comicsList\\ComicsList.js",["71","72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":18},{"ruleId":"78","severity":1,"message":"82","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":16},{"ruleId":"78","severity":1,"message":"83","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":16},{"ruleId":"78","severity":1,"message":"84","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":18},{"ruleId":"78","severity":1,"message":"85","line":13,"column":12,"nodeType":"80","messageId":"81","endLine":13,"endColumn":24},{"ruleId":"78","severity":1,"message":"86","line":14,"column":11,"nodeType":"80","messageId":"81","endLine":14,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":27,"column":7,"nodeType":"89","endLine":27,"endColumn":9,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":7,"column":17,"nodeType":"93","endLine":7,"endColumn":29},{"ruleId":"91","severity":1,"message":"92","line":13,"column":25,"nodeType":"93","endLine":13,"endColumn":37},{"ruleId":"91","severity":1,"message":"92","line":15,"column":25,"nodeType":"93","endLine":15,"endColumn":37},{"ruleId":"87","severity":1,"message":"94","line":20,"column":8,"nodeType":"89","endLine":20,"endColumn":10,"suggestions":"95"},{"ruleId":"87","severity":1,"message":"88","line":17,"column":7,"nodeType":"89","endLine":17,"endColumn":21,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":5,"column":9,"nodeType":"93","endLine":5,"endColumn":25},{"ruleId":"78","severity":1,"message":"99","line":1,"column":29,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"94","line":20,"column":7,"nodeType":"89","endLine":20,"endColumn":9,"suggestions":"100"},{"ruleId":"91","severity":1,"message":"92","line":44,"column":21,"nodeType":"93","endLine":44,"endColumn":33},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'RandomChar' is defined but never used.","Identifier","unusedVar","'CharList' is defined but never used.","'CharInfo' is defined but never used.","'decoration' is defined but never used.","'selectedChar' is assigned a value but never used.","'onCharSelected' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.","ArrayExpression",["103"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'offset' and 'onRequest'. Either include them or remove the dependency array.",["104"],["105"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useRef' is defined but never used.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"109","fix":"113"},"Update the dependencies array to be: [updateChar]",{"range":"114","text":"115"},"Update the dependencies array to be: [offset, onRequest]",{"range":"116","text":"117"},"Update the dependencies array to be: [props.charId, updateChar]",{"range":"118","text":"119"},{"range":"120","text":"117"},[717,719],"[updateChar]",[654,656],"[offset, onRequest]",[503,517],"[props.charId, updateChar]",[624,626]]