[{"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\index.js":"1","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\services\\MarvelService.js":"2","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\app\\App.js":"3","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\randomChar\\RandomChar.js":"4","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\appHeader\\AppHeader.js":"5","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charList\\CharList.js":"6","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charInfo\\CharInfo.js":"7","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\spinner\\spinner.js":"8","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\errorMessage\\ErrorMessage.js":"9","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\skeleton\\Skeleton.js":"10","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\hooks\\http.hooks.js":"11","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\comicsList\\ComicsList.js":"12"},{"size":242,"mtime":1685781145178,"results":"13","hashOfConfig":"14"},{"size":1216,"mtime":1686836737577,"results":"15","hashOfConfig":"14"},{"size":1069,"mtime":1686837975449,"results":"16","hashOfConfig":"14"},{"size":2715,"mtime":1686836468118,"results":"17","hashOfConfig":"14"},{"size":559,"mtime":1629625707000,"results":"18","hashOfConfig":"14"},{"size":4583,"mtime":1686833861827,"results":"19","hashOfConfig":"14"},{"size":2918,"mtime":1686832702880,"results":"20","hashOfConfig":"14"},{"size":4615,"mtime":1685794854204,"results":"21","hashOfConfig":"14"},{"size":143,"mtime":1685795893704,"results":"22","hashOfConfig":"14"},{"size":666,"mtime":1629627051000,"results":"23","hashOfConfig":"14"},{"size":930,"mtime":1686836051966,"results":"24","hashOfConfig":"14"},{"size":3544,"mtime":1629627563000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"108toe1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\index.js",[],["56","57"],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\services\\MarvelService.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\app\\App.js",["58","59","60","61","62","63"],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\randomChar\\RandomChar.js",["64"],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\appHeader\\AppHeader.js",["65","66","67"],"import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charList\\CharList.js",["68"],"import {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charInfo\\CharInfo.js",["69"],"import { useState,useEffect } from 'react';\nimport PropTypes from 'prop-types'\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n    const [char,setChar]=useState(null);\n    const {loading,error,getCharacter,clearError}=useMarvelService();\n\n    useEffect(()=>{\n        updateChar();\n    },[props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        };\n        clearError()\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\nCharInfo.propTypes={\n    charId: PropTypes.number\n}\nexport default CharInfo;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\spinner\\spinner.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\errorMessage\\ErrorMessage.js",["70"],"import img from './error (1).gif'\r\n\r\nconst ErrorMessage =()=>{\r\n    return(\r\n        <img src={img}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\skeleton\\Skeleton.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\hooks\\http.hooks.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\comicsList\\ComicsList.js",["71","72","73","74","75","76","77","78"],"import './comicsList.scss';\nimport uw from '../../resources/img/UW.png';\nimport xMen from '../../resources/img/x-men.png';\n\nconst ComicsList = () => {\n    return (\n        <div className=\"comics__list\">\n            <ul className=\"comics__grid\">\n                <li className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n                        <div className=\"comics__item-price\">9.99$</div>\n                    </a>\n                </li>\n                <li className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n                        <div className=\"comics__item-price\">NOT AVAILABLE</div>\n                    </a>\n                </li>\n                <li className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n                        <div className=\"comics__item-price\">9.99$</div>\n                    </a>\n                </li>\n                <li className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n                        <div className=\"comics__item-price\">NOT AVAILABLE</div>\n                    </a>\n                </li>\n                <li className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n                        <div className=\"comics__item-price\">9.99$</div>\n                    </a>\n                </li>\n                <li className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n                        <div className=\"comics__item-price\">NOT AVAILABLE</div>\n                    </a>\n                </li>\n                <li className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n                        <div className=\"comics__item-price\">9.99$</div>\n                    </a>\n                </li>\n                <li className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n                        <div className=\"comics__item-price\">NOT AVAILABLE</div>\n                    </a>\n                </li>\n            </ul>\n            <button className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":18},{"ruleId":"83","severity":1,"message":"87","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":16},{"ruleId":"83","severity":1,"message":"88","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":16},{"ruleId":"83","severity":1,"message":"89","line":10,"column":8,"nodeType":"85","messageId":"86","endLine":10,"endColumn":18},{"ruleId":"83","severity":1,"message":"90","line":13,"column":12,"nodeType":"85","messageId":"86","endLine":13,"endColumn":24},{"ruleId":"83","severity":1,"message":"91","line":14,"column":11,"nodeType":"85","messageId":"86","endLine":14,"endColumn":25},{"ruleId":"92","severity":1,"message":"93","line":27,"column":7,"nodeType":"94","endLine":27,"endColumn":9,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":7,"column":17,"nodeType":"98","endLine":7,"endColumn":29},{"ruleId":"96","severity":1,"message":"97","line":13,"column":25,"nodeType":"98","endLine":13,"endColumn":37},{"ruleId":"96","severity":1,"message":"97","line":15,"column":25,"nodeType":"98","endLine":15,"endColumn":37},{"ruleId":"92","severity":1,"message":"99","line":20,"column":8,"nodeType":"94","endLine":20,"endColumn":10,"suggestions":"100"},{"ruleId":"92","severity":1,"message":"93","line":17,"column":7,"nodeType":"94","endLine":17,"endColumn":21,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":5,"column":9,"nodeType":"98","endLine":5,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":10,"column":21,"nodeType":"98","endLine":10,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":17,"column":21,"nodeType":"98","endLine":17,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":24,"column":21,"nodeType":"98","endLine":24,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":31,"column":21,"nodeType":"98","endLine":31,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":38,"column":21,"nodeType":"98","endLine":38,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":45,"column":21,"nodeType":"98","endLine":45,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":52,"column":21,"nodeType":"98","endLine":52,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":59,"column":21,"nodeType":"98","endLine":59,"endColumn":33},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'RandomChar' is defined but never used.","Identifier","unusedVar","'CharList' is defined but never used.","'CharInfo' is defined but never used.","'decoration' is defined but never used.","'selectedChar' is assigned a value but never used.","'onCharSelected' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.","ArrayExpression",["106"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'offset' and 'onRequest'. Either include them or remove the dependency array.",["107"],["108"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [updateChar]",{"range":"115","text":"116"},"Update the dependencies array to be: [offset, onRequest]",{"range":"117","text":"118"},"Update the dependencies array to be: [props.charId, updateChar]",{"range":"119","text":"120"},[717,719],"[updateChar]",[654,656],"[offset, onRequest]",[503,517],"[props.charId, updateChar]"]