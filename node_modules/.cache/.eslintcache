[{"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\index.js":"1","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\services\\MarvelService.js":"2","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\app\\App.js":"3","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\randomChar\\RandomChar.js":"4","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\appHeader\\AppHeader.js":"5","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charList\\CharList.js":"6","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charInfo\\CharInfo.js":"7","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\spinner\\spinner.js":"8","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\errorMessage\\ErrorMessage.js":"9","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\skeleton\\Skeleton.js":"10","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\hooks\\http.hooks.js":"11","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\comicsList\\ComicsList.js":"12","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\appBanner\\AppBanner.js":"13","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\Pages\\index.js":"14","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\Pages\\MainPages.js":"15","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\Pages\\ComicsPage.js":"16","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\Pages\\Page404.js":"17","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\Pages\\SingleComicPage.js":"18"},{"size":332,"mtime":1686922180445,"results":"19","hashOfConfig":"20"},{"size":2177,"mtime":1686904402778,"results":"21","hashOfConfig":"20"},{"size":1386,"mtime":1687246846303,"results":"22","hashOfConfig":"20"},{"size":2715,"mtime":1686836468118,"results":"23","hashOfConfig":"20"},{"size":713,"mtime":1687246656667,"results":"24","hashOfConfig":"20"},{"size":3747,"mtime":1686909005445,"results":"25","hashOfConfig":"20"},{"size":2918,"mtime":1686832702880,"results":"26","hashOfConfig":"20"},{"size":4615,"mtime":1685794854204,"results":"27","hashOfConfig":"20"},{"size":143,"mtime":1685795893704,"results":"28","hashOfConfig":"20"},{"size":666,"mtime":1629627051000,"results":"29","hashOfConfig":"20"},{"size":930,"mtime":1686836051966,"results":"30","hashOfConfig":"20"},{"size":2481,"mtime":1687246732634,"results":"31","hashOfConfig":"20"},{"size":522,"mtime":1629627299000,"results":"32","hashOfConfig":"20"},{"size":165,"mtime":1687246124645,"results":"33","hashOfConfig":"20"},{"size":739,"mtime":1686992781404,"results":"34","hashOfConfig":"20"},{"size":254,"mtime":1686992976831,"results":"35","hashOfConfig":"20"},{"size":343,"mtime":1687246563823,"results":"36","hashOfConfig":"20"},{"size":1896,"mtime":1687246696595,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"108toe1",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\index.js",[],["79","80"],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\services\\MarvelService.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\app\\App.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\randomChar\\RandomChar.js",["81"],"import { useState, useEffect } from 'react';\n\nimport './randomChar.scss';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport useMarverService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\n\nconst RandomChar = () =>{\n    const [char,setChar]=useState([]);\n\n    const {loading,error,getCharacter,clearError}=useMarverService();\n\n    const updateChar=()=>{\n        clearError();\n        const id =Math.floor(Math.random()*(1011400-1011000)+1011000)\n        getCharacter(id)\n        .then(onCharLoaded)\n    };\n\n    const onCharLoaded=(char)=>{\n        setChar(char);\n    }\n    useEffect(()=>{\n        updateChar()\n    },[])\n\n    const errorMassage = error ? <ErrorMessage/>:null;\n    const spinner = loading ? <Spinner/>:null;\n    const content =!(loading || error) ? <View char={char}/>:null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMassage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\nconst View = ({char}) =>{\n    const{name, description, thumbnail, homepage, wiki}=char\n    let imgStyle = {'objectFit' : 'cover'};\n\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return( \n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default RandomChar;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\appHeader\\AppHeader.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charList\\CharList.js",["82"],"import {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\charInfo\\CharInfo.js",["83"],"import { useState,useEffect } from 'react';\nimport PropTypes from 'prop-types'\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n    const [char,setChar]=useState(null);\n    const {loading,error,getCharacter,clearError}=useMarvelService();\n\n    useEffect(()=>{\n        updateChar();\n    },[props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        };\n        clearError()\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\nCharInfo.propTypes={\n    charId: PropTypes.number\n}\nexport default CharInfo;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\spinner\\spinner.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\errorMessage\\ErrorMessage.js",["84"],"import img from './error (1).gif'\r\n\r\nconst ErrorMessage =()=>{\r\n    return(\r\n        <img src={img}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\skeleton\\Skeleton.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\hooks\\http.hooks.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\comicsList\\ComicsList.js",["85"],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\appBanner\\AppBanner.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\Pages\\index.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\Pages\\MainPages.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\Pages\\ComicsPage.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\Pages\\Page404.js",[],"C:\\Users\\Илья\\Desktop\\marvel_starter\\src\\components\\Pages\\SingleComicPage.js",["86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":27,"column":7,"nodeType":"94","endLine":27,"endColumn":9,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":20,"column":8,"nodeType":"94","endLine":20,"endColumn":10,"suggestions":"97"},{"ruleId":"92","severity":1,"message":"93","line":17,"column":7,"nodeType":"94","endLine":17,"endColumn":21,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":5,"column":9,"nodeType":"101","endLine":5,"endColumn":25},{"ruleId":"92","severity":1,"message":"96","line":21,"column":8,"nodeType":"94","endLine":21,"endColumn":10,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":15},{"ruleId":"92","severity":1,"message":"107","line":17,"column":8,"nodeType":"94","endLine":17,"endColumn":17,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has missing dependencies: 'offset' and 'onRequest'. Either include them or remove the dependency array.",["112"],["113"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["114"],"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'updateComic'. Either include it or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"118","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [updateChar]",{"range":"125","text":"126"},"Update the dependencies array to be: [offset, onRequest]",{"range":"127","text":"128"},"Update the dependencies array to be: [props.charId, updateChar]",{"range":"129","text":"130"},{"range":"131","text":"128"},"Update the dependencies array to be: [comicId, updateComic]",{"range":"132","text":"133"},[717,719],"[updateChar]",[654,656],"[offset, onRequest]",[503,517],"[props.charId, updateChar]",[653,655],[577,586],"[comicId, updateComic]"]