{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u044F\\\\Desktop\\\\marvel_starter\\\\src\\\\components\\\\charList\\\\CharList.js\";\nimport { Component } from 'react';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onCharListLoaded = charList => {\n      this.setState({\n        charList,\n        loading: false\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.marvelService.getAllCharacters().then(this.onCharListLoaded).catch(this.onError);\n  }\n\n  // Этот метод создан для оптимизации, \n  // чтобы не помещать такую конструкцию в метод render\n  renderItems(arr) {\n    const items = arr.map(item => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    }); // А эта конструкция вынесена для центровки спиннера/ошибки\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error\n    } = this.state;\n    const items = this.renderItems(charList);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(\"spinner\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? items : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CharList;","map":{"version":3,"sources":["C:/Users/Илья/Desktop/marvel_starter/src/components/charList/CharList.js"],"names":["Component","Spinner","ErrorMessage","MarvelService","CharList","state","charList","loading","error","marvelService","onCharListLoaded","setState","onError","componentDidMount","getAllCharacters","then","catch","renderItems","arr","items","map","item","imgStyle","thumbnail","name","id","render","errorMessage","spinner","content"],"mappings":"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","sourcesContent":["import {Component} from 'react';\n\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.marvelService.getAllCharacters()\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoaded = (charList) => {\n        this.setState({\n            charList,\n            loading: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}