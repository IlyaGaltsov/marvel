{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useHttp } from '../hooks/http.hooks';\nconst useMarvelService = () => {\n  _s();\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const _apiKey = \"apikey=79e891de74347d7a9490aa8fa3c8739e\";\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _baseOffset = 210;\n  const getAllCharacters = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _baseOffset;\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n  const getAllComics = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformComics);\n  };\n  const getComics = async id => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : \"There is no description for this character\",\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n  const _transformComics = comics => {\n    var _comics$textObjects$;\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      language: ((_comics$textObjects$ = comics.textObjects[0]) === null || _comics$textObjects$ === void 0 ? void 0 : _comics$textObjects$.language) || \"en-us\",\n      // optional chaining operator\n      price: comics.prices[0].price ? `${comics.prices[0].price}$` : \"not available\"\n    };\n  };\n  return {\n    loading,\n    error,\n    clearError,\n    getAllCharacters,\n    getCharacter,\n    getAllComics,\n    getComics\n  };\n};\n_s(useMarvelService, \"uUyY7lUIwkf2no8vbgFvZlrZhN4=\", false, function () {\n  return [useHttp];\n});\nexport default useMarvelService;","map":{"version":3,"names":["useHttp","useMarvelService","_s","loading","request","error","clearError","_apiKey","_apiBase","_baseOffset","getAllCharacters","offset","arguments","length","undefined","res","data","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComics","char","name","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices"],"sources":["C:/Users/Илья/Desktop/marvel_starter/src/services/MarvelService.js"],"sourcesContent":["import { useHttp } from '../hooks/http.hooks';\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\r\n\tconst _apiKey=\"apikey=79e891de74347d7a9490aa8fa3c8739e\"\r\n    const _apiBase=\"https://gateway.marvel.com:443/v1/public/\"\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComics = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: \"There is no description for this character\",\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComics,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;"],"mappings":"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"},"metadata":{},"sourceType":"module"}